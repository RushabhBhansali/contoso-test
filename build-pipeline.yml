resources:
  containers:
  - container: servercore
    image: nathansoz/nanoserver-node-1803:1.0

variables:
  BuildToDownload: latest
  BuildId: 1

jobs:
- job: build_test_harness
  displayName: Build Test Harness
  pool:
    vmImage: vs2017-win2016
  steps:
  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'specific'
      project: 'b924d696-3eae-4116-8443-9a18392d8544'
      pipeline: 6743
      buildVersionToDownload: 'latest'
      downloadType: 'specific'
    condition: eq(variables['BuildToDownload'], 'latest')
  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'specific'
      project: 'b924d696-3eae-4116-8443-9a18392d8544'
      pipeline: 6743
      buildVersionToDownload: 'specific'
      buildId: $(BuildId)
      downloadType: 'specific'
    condition: eq(variables['BuildToDownload'], 'specific')
  - task: PowerShell@2
    inputs:
      filePath: set-artifact-name.ps1
  - task: ms-vscs-artifact.build-tasks.artifactDropDownloadTask-1.artifactDropDownloadTask@0
    displayName: 'Download from Artifact Services Drop'
    inputs:
      buildNumber: $(myArtifactName)
      dropServiceURI: 'https://mseng.artifacts.visualstudio.com/DefaultCollection'
      rootPaths: Release.AnyCPU/Governance.ComponentDetection
  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: CG
      targetPath: $(Build.SourcesDirectory)/drop/Release.AnyCPU/Governance.ComponentDetection
- job: ubuntu_1604
  dependsOn: build_test_harness
  displayName: Component Detection - Ubuntu 16.04
  pool:
    vmImage: ubuntu-16.04
  steps:
  - task: Npm@1
    inputs:
      command: install
      workingDir: projects/npm
  - task: DownloadPipelineArtifact@0
    inputs:
      artifactName: CG
      targetPath: $(Build.ArtifactStagingDirectory)
  - bash: chmod +x $(Build.ArtifactStagingDirectory)/netstandard2.0/Governance.ComponentDetection.Package/linux/MS.VS.Services.Governance.ComponentDetection.Loader && $(Build.ArtifactStagingDirectory)/netstandard2.0/Governance.ComponentDetection.Package/linux/MS.VS.Services.Governance.ComponentDetection.Loader detect --ScanType LogOnly --SourceDirectory $(Build.SourcesDirectory)/projects
- job: windows_containerized_job
  dependsOn: build_test_harness
  displayName: Component Detection - Windows Container 1803
  pool:
    vmImage: win1803
  container: servercore
  steps:
  #- task: Npm@1
  #  inputs:
  #    command: install
  #    workingDir: projects/npm
  - powershell: c:/nodejs/npm.cmd install projects/npm
  - task: DownloadPipelineArtifact@0
    inputs:
      artifactName: CG
      targetPath: $(Build.ArtifactStagingDirectory)
  - powershell: $(Build.ArtifactStagingDirectory)/netstandard2.0/Governance.ComponentDetection.Package/windows/MS.VS.Services.Governance.ComponentDetection.Loader.exe detect --ScanType LogOnly --SourceDirectory $(Build.SourcesDirectory)/projects
- job: vs2017_win2016_job
  dependsOn: build_test_harness
  displayName: Component Detection - Windows Server 2016
  pool:
    vmImage: vs2017-win2016
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '6.x'
  - task: Npm@1
    inputs:
      command: install
      workingDir: projects/npm
  - task: DownloadPipelineArtifact@0
    inputs:
      artifactName: CG
      targetPath: $(Build.ArtifactStagingDirectory)
  - powershell: $(Build.ArtifactStagingDirectory)/netstandard2.0/Governance.ComponentDetection.Package/windows/MS.VS.Services.Governance.ComponentDetection.Loader.exe detect --ScanType LogOnly --SourceDirectory $(Build.SourcesDirectory)/projects
- job: macos
  dependsOn: build_test_harness
  displayName: Component Detection - MacOS
  pool:
    vmImage: macOS-10.13
  steps:
  - task: Npm@1
    inputs:
      command: install
      workingDir: projects/npm
  - task: DownloadPipelineArtifact@0
    inputs:
      artifactName: CG
      targetPath: $(Build.ArtifactStagingDirectory)
  - bash: chmod +x $(Build.ArtifactStagingDirectory)/netstandard2.0/Governance.ComponentDetection.Package/macos/MS.VS.Services.Governance.ComponentDetection.Loader && $(Build.ArtifactStagingDirectory)/netstandard2.0/Governance.ComponentDetection.Package/macos/MS.VS.Services.Governance.ComponentDetection.Loader detect --ScanType LogOnly --SourceDirectory $(Build.SourcesDirectory)/projects


