resources:
  containers:
  - container: NanoServer
    image: microsoft/windowsservercore@sha256:11827f8ee0c02106489e553be170c083381ee362687f0ae097a2ac5482b72778

variables:
  EnableDetectorPip: true
  EnableDetectorCorextCG: true

jobs:
- job: build_test_harness
  displayName: Build Test Harness
  pool:
    vmImage: vs2017-win2016
  steps:
  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'specific'
      project: 'b924d696-3eae-4116-8443-9a18392d8544'
      pipeline: 6743
      buildVersionToDownload: 'latest'
      downloadType: 'specific'
    condition: eq(variables['GovernanceBuildId'], '')
  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'specific'
      project: 'b924d696-3eae-4116-8443-9a18392d8544'
      pipeline: 6743
      buildVersionToDownload: 'specific'
      buildId: $(GovernanceBuildId)
      downloadType: 'specific'
    condition: ne(variables['GovernanceBuildId'], '')
  - task: PowerShell@2
    inputs:
      filePath: set-artifact-name.ps1
  - task: ms-vscs-artifact.build-tasks.artifactDropDownloadTask-1.artifactDropDownloadTask@0
    displayName: 'Download from Artifact Services Drop'
    inputs:
      buildNumber: $(myArtifactName)
      dropServiceURI: 'https://mseng.artifacts.visualstudio.com/DefaultCollection'
      rootPaths: Release.AnyCPU/Governance.ComponentDetection
  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: CG
      targetPath: $(Build.SourcesDirectory)/drop/Release.AnyCPU/Governance.ComponentDetection
- job: ubuntu_1604
  dependsOn: build_test_harness
  displayName: Component Detection - Ubuntu 16.04
  pool:
    vmImage: ubuntu-16.04
  steps:
  - task: Npm@1
    inputs:
      command: install
      workingDir: projects/npm
  - task: DownloadPipelineArtifact@0
    inputs:
      artifactName: CG
      targetPath: $(Build.ArtifactStagingDirectory)
  - script: dotnet build
    displayName: Build Test Project
  - task: Maven@3
    displayName: 'Maven projects\maven\pom.xml'
    inputs:
      mavenPomFile: 'projects/maven/pom.xml'
      goals: 'dependency:tree'
      options: '-DoutputFile="cg.mvndeps" -DoutputType=text -f .\pom.xml'
      publishJUnitResults: false
  - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
    displayName: 'Component Detection'
    inputs:
      ignoreDirectories: '.\bin'
      verbosity: Verbose
  - task: GovernanceTeam.vss-governance-buildtask-ppe.governance-build-task-component-detection-ppe.ComponentGovernanceComponentDetectionPpe@0
    displayName: 'PPE Component Detection'
    inputs:
      ignoreDirectories: '.\bin'
      verbosity: Verbose
  - task: DotNetCoreCLI@2
    displayName: Run Linux Tests
    inputs:
      command: test
      projects: '*.csproj'
      arguments: '--configuration $(buildConfiguration)'
- job: windows_containerized_job
  dependsOn: build_test_harness
  displayName: Component Detection - Windows Container 1803
  pool:
    vmImage: win1803
  container: NanoServer
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '6.x'
  - task: Npm@1
    inputs:
      command: install
      workingDir: projects/npm
  - task: DownloadPipelineArtifact@0
    inputs:
      artifactName: CG
      targetPath: $(Build.ArtifactStagingDirectory)
  - task: DotNetCoreInstaller@0
    inputs:
      packageType: 'sdk' 
      version: '2.1.402' 
  - script: dotnet build
    displayName: Build Test Project
  - task: Maven@3
    displayName: 'Maven projects\maven\pom.xml'
    inputs:
      mavenPomFile: 'projects/maven/pom.xml'
      goals: 'dependency:tree'
      options: '-DoutputFile="cg.mvndeps" -DoutputType=text -f .\pom.xml'
      publishJUnitResults: false
  - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
    displayName: 'Component Detection'
    inputs:
      ignoreDirectories: '.\bin'
      verbosity: Verbose
  - task: GovernanceTeam.vss-governance-buildtask-ppe.governance-build-task-component-detection-ppe.ComponentGovernanceComponentDetectionPpe@0
    displayName: 'PPE Component Detection'
    inputs:
      ignoreDirectories: '.\bin'
      verbosity: Verbose
  - task: DotNetCoreCLI@2
    displayName: Run Windows Container Tests
    inputs:
      command: test
      projects: '*.csproj'
      arguments: '--configuration $(buildConfiguration)'
- job: vs2017_win2016_job
  dependsOn: build_test_harness
  displayName: Component Detection - Windows Server 2016
  pool:
    vmImage: vs2017-win2016
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '6.x'
  - task: Npm@1
    inputs:
      command: install
      workingDir: projects/npm
  - task: DownloadPipelineArtifact@0
    inputs:
      artifactName: CG
      targetPath: $(Build.ArtifactStagingDirectory)
  - script: dotnet build
    displayName: Build Test Project
  - task: Maven@3
    displayName: 'Maven projects\maven\pom.xml'
    inputs:
      mavenPomFile: 'projects/maven/pom.xml'
      goals: 'dependency:tree'
      options: '-DoutputFile="cg.mvndeps" -DoutputType=text -f .\pom.xml'
      publishJUnitResults: false
  - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
    displayName: 'Component Detection'
    inputs:
      ignoreDirectories: '.\bin'
      verbosity: Verbose
  - task: GovernanceTeam.vss-governance-buildtask-ppe.governance-build-task-component-detection-ppe.ComponentGovernanceComponentDetectionPpe@0
    displayName: 'PPE Component Detection'
    inputs:
      ignoreDirectories: '.\bin'
      verbosity: Verbose
  - task: DotNetCoreCLI@2
    displayName: Run Windows Tests
    inputs:
      command: test
      projects: '*.csproj'
      arguments: '--configuration $(buildConfiguration)'
- job: macos
  dependsOn: build_test_harness
  displayName: Component Detection - MacOS
  pool:
    vmImage: macOS-10.13
  steps:
  - task: Npm@1
    inputs:
      command: install
      workingDir: projects/npm
  - task: DownloadPipelineArtifact@0
    inputs:
      artifactName: CG
      targetPath: $(Build.ArtifactStagingDirectory)
  - script: dotnet build
    displayName: Build Test Project
  - task: Maven@3
    displayName: 'Maven projects\maven\pom.xml'
    inputs:
      mavenPomFile: 'projects/maven/pom.xml'
      goals: 'dependency:tree'
      options: '-DoutputFile="cg.mvndeps" -DoutputType=text -f .\pom.xml'
      publishJUnitResults: false
  - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
    displayName: 'Component Detection'
    inputs:
      ignoreDirectories: '.\bin'
      verbosity: Verbose
  - task: GovernanceTeam.vss-governance-buildtask-ppe.governance-build-task-component-detection-ppe.ComponentGovernanceComponentDetectionPpe@0
    displayName: 'PPE Component Detection'
    inputs:
      ignoreDirectories: '.\bin'
      verbosity: Verbose
  - task: DotNetCoreCLI@2
    displayName: Run MacOS Tests
    inputs:
      command: test
      projects: '*.csproj'
      arguments: '--configuration $(buildConfiguration)'

