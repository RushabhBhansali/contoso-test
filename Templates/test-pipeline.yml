parameters:
  ComponentDetection: ''
  DetectorArgs: '--ScanType Register --IsTransientSnapshot false --SourceDirectory "$(Build.ArtifactStagingDirectory)/PPETestRepo" --IgnoreDirectories .\bin --Output "$(System.ArtifactsDirectory)" --Url https://governance.dev.azure.com/mseng/ --BuildIdentifier $(Build.BuildId) --BuildDisplayIdentifier $(Build.BuildNumber) --BuildType vsts://0efb4611-d565-4cd1-9a64-7d6cb6d7d5f0/b924d696-3eae-4116-8443-9a18392d8544/$(System.DefinitionId) --BuildDisplayType $(Build.DefinitionName) --SourceIdentifier $CommitId --SourceDisplayIdentifier ${CommitId:0:8} --SourceType vsts://0efb4611-d565-4cd1-9a64-7d6cb6d7d5f0/b924d696-3eae-4116-8443-9a18392d8544/a37b5dcf-80bb-4db5-9ece-8bcbb8053659/$(Build.SourceBranchName) --SourceDisplayType $(Build.SourceBranchName) --DetectorArgs Pip=EnableIfDefaultOff,CorextCG=EnableIfDefaultOff,GradlewCli=EnableIfDefaultOff'

steps:
  - bash: 'AUTH=$(echo -n ":$(System.AccessToken)" | openssl base64 | tr -d "\n","\r") && git -c http.extraheader="AUTHORIZATION: BASIC $AUTH" clone https://mseng@dev.azure.com/mseng/AzureDevOps/_git/Governance.BuildTaskTests --branch master PPETestRepo && echo "Completed clone"'
    displayName: 'Clone Testing Repo'
    workingDirectory: $(Build.ArtifactStagingDirectory)

  #Install node if it's a windows container
  - task: NodeTool@0
    inputs:
      versionSpec: '6.x'
    condition: eq(variables['imageName'], 'win1803') 

  #Run npm install  
  - task: Npm@1
    inputs:
      command: install
      workingDir: $(Build.ArtifactStagingDirectory)/PPETestRepo/projects/npm

  #pre-build up maven dependency tree so both detectors have equal advantage, does not run on containers
  - task: Maven@3
    displayName: 'Build Maven Tree'
    inputs:
      mavenPomFile: '$(Build.ArtifactStagingDirectory)/PPETestRepo/projects/maven/pom.xml'
      goals: 'dependency:tree'
      options: '-DoutputFile="cg.mvndeps" -DoutputType=text'
      publishJUnitResults: false
    continueOnError: true

  #run new version of component detection, slightly faster failing and also gives us access to logs since it's the task that uploads them
  - bash: 'CommitId=$(Build.SourceVersion); ${{ parameters.ComponentDetection }} detect --Pat $(System.AccessToken) ${{ parameters.DetectorArgs }}'
    displayName: 'PPE Component Detection'

  #run currently deployed version of build task
  - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
    displayName: 'Component Detection'
    inputs:
      ignoreDirectories: '.\bin'
      verbosity: Verbose
      sourceScanPath: '$(Build.ArtifactStagingDirectory)/PPETestRepo'

  #run detection tests
  - task: DotNetCoreCLI@2
    displayName: Run Detector Tests
    inputs:
      command: test
      projects: '$(Build.ArtifactStagingDirectory)/PPETestRepo/*.csproj'
    continueOnError: false

