jobs:
- job: platformSpecificBuild
  displayName: Component Detection - 
  strategy:
    matrix:
      Linux:
        imageName: 'ubuntu-16.04'
        poolName: 'Hosted Ubuntu 1604'
        runtimeIdentifier: 'linux-x64'
      Mac:
        imageName: 'macos-10.13'
        poolName: 'Hosted macOS'
        runtimeIdentifier: 'osx-x64'
      Windows:
        imageName: 'vs2017-win2016'
        poolName: 'Hosted VS2017'
        runtimeIdentifier: 'win-x64'

  pool:
    name: $(poolName)

  steps:

  - task: NodeTool@0
    inputs:
      versionSpec: '6.x'

  - task: Npm@1
    inputs:
      command: install
      workingDir: projects/npm

  - task: Maven@3
    displayName: 'Maven projects\maven\pom.xml'
    inputs:
      mavenPomFile: 'projects/maven/pom.xml'
      goals: 'dependency:tree'
      options: '-DoutputFile="cg.mvndeps" -DoutputType=text -f .\pom.xml'
      publishJUnitResults: false

  - task: OpenSourceEngineeringTeam.vss-ose-buildtask-ppe.ose-build-task-component-detection-ppe.ComponentGovernanceComponentDetectionPpe@0
    displayName: 'PPE Component Detection'
    inputs:
      ignoreDirectories: '.\bin'
      verbosity: Verbose

  - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
    displayName: 'Component Detection'
    inputs:
      ignoreDirectories: '.\bin'
      verbosity: Verbose

  - task: DotNetCoreInstaller@0
    displayName: Install DotNetCore
    inputs:
      packageType: 'sdk' 
      version: '2.2.101' 

  - task: DotNetCoreCLI@2
    displayName: Run Detector Tests
    inputs:
      command: test
      projects: '*.csproj'

